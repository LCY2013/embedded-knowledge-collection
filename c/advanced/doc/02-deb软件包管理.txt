【1】流行的两种软件包管理机制
    (1)Debian Linux首先提出“软件包”的管理机制---Deb软件包
          将应用程序的二进制文件、配置文件、man/info帮助页面等文件合并打包在一个文件中，用户使用软件包管理器直接操作软件包，完成获取、安装、卸载、查询等操作。
   （2）Redhat Linux基于这个理念推出了自己的软件包管理机制---Rpm软件包
   （3）随着Linux操作系统规模不断扩大，系统中软件包间复杂的依赖关系，导致Linux用户麻烦不断
   （4）Debian Linux开发出了APT软件包管理器。
	1）检查和修复软件包依赖关系
        2）利用Internet网络帮助用户主动获取软件包
   （5）APT工具再次促进了Deb软件包更为广泛地使用，成为Debian Linux的一个无法替代的亮点。
	

【2】软件包的类型
    （1）Ubuntu有两种类型的软件包：二进制软件包（deb）和源码包（deb-src）
	 1）二进制软件包（Binary Packages）：它包含可执行文件、库文件、配置文件、man/info页面、版权声明和其它文档。
         2）源码包（Source Packages）：包含软件源代码、版本修改说明、构建指令及编译工具等。
            先由tar工具归档为.tar.gz文件，然后再打包成.dsc文件。
    （2）在用户不确定一个软件包类型时，可以使用file命令查看文件类型。


【3】软件包的命名
	软件包的命名遵循以下约定：
	Filename_Version-Reversion_Architecture.deb
	软件包名称       Filename
	软件版本	 Version
	修订版本	 Reversion
	体系架构A	 rchitecture

【4】软件包管理工具分类
    （1）根据用户交互方式的不同，可以将常见的软件包管理工具分为三类：
       	     类别         常见工具举例                   描述
           命令行        dpkg-deb、dpkg、apt              在命令行模式下完成软件包管理任务。为完成软件包
                                                       的获取、查询、软件包依赖性检查、安装、卸载等任务
                                                       需要使用各自不同的命令
          文本窗口界面   dselect、aptitude、tasksel      在文本窗口模式中，使用窗口和菜单可以完成软件包管理任务
          图形界面       synaptic                        在X-Window图形桌面环境中运行，具有更好的交互性、可读性、易用性等特点


【5】dpkg相关命令
	dpkg -i <package>   安装一个在本地文件系统上存在的Debian软件包
        dpgk -r <package>   移除一个已经安装的软件包
        dpkg -P <package>   移除已安装软件包及配置文件
        dpkg -L <package>   列出安装的软件包清单
        dpkg -s <package>   显出软件包的安装状态

        
【6】总结与思考
     (1) 本节课主要对软件包管理机制进行了总体介绍，并详细讲解了dpkg软件包管理器的用法
    （2）思考
		1）dpkg和apt软件包管理器有什么区别？
       









